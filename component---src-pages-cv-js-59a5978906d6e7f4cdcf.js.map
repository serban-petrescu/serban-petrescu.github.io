{"version":3,"file":"component---src-pages-cv-js-59a5978906d6e7f4cdcf.js","mappings":"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","sources":["webpack://app/./src/pages/cv.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport \"./cv.scss\";\n\nexport default function CV({ data }) {\n    const { metadata, work, certifications, education, cv } = data;\n    \n    const renderPeriod = (period) => {\n        if (period.at) return period.at;\n        if (!period.to || period.to === \"Invalid date\") return `${period.from} - Present`;\n        return `${period.from} - ${period.to}`;\n    };\n\n    const handlePrint = () => {\n        window.print();\n    };\n\n    const avatar = getImage(metadata.avatar);\n\n    return (\n        <div className=\"cv-container\">\n            <button className=\"cv-print-button\" onClick={handlePrint} aria-label=\"Print CV\">\n                üñ®Ô∏è\n            </button>\n            \n            <header className=\"cv-header\">\n                {avatar && (\n                    <div className=\"cv-avatar\">\n                        <GatsbyImage image={avatar} alt={metadata.name} />\n                    </div>\n                )}\n                <div className=\"cv-header-content\">\n                    <h1>{metadata.name}</h1>\n                    <div className=\"cv-title\">{metadata.role}</div>\n                    <div className=\"cv-contact\">\n                        <span><a href={`mailto:${metadata.email}`}>{metadata.email}</a></span>\n                        <span><a href={`tel:${metadata.phone}`}>{metadata.phone}</a></span>\n                        <span>{metadata.location}</span>\n                        <span><a href={metadata.accounts.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></span>\n                        <span><a href={metadata.accounts.github} target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></span>\n                    </div>\n                </div>\n            </header>\n\n            <section className=\"cv-section cv-summary\">\n                <h2>Professional Summary</h2>\n                {cv.summary.split('\\n\\n').map((para, idx) => (\n                    <p key={idx}>{para}</p>\n                ))}\n            </section>\n\n            <section className=\"cv-section\">\n                <h2>Key Achievements</h2>\n                <ul className=\"cv-achievements\">\n                    {cv.achievements.map((achievement, idx) => (\n                        <li key={idx}>{achievement}</li>\n                    ))}\n                </ul>\n            </section>\n\n            <section className=\"cv-section cv-work-experience\">\n                <h2>Work Experience</h2>\n                {work.nodes.filter(job => job.featured).map((job, idx) => (\n                    <div key={idx} className=\"cv-item\">\n                        <div className=\"cv-item-header\">\n                            <h3>{job.title}</h3>\n                            <span className=\"cv-period\">{renderPeriod(job.period)}</span>\n                        </div>\n                        <div className=\"cv-item-body\" dangerouslySetInnerHTML={{ __html: job.body.replace(/\\n\\n/g, '<br/><br/>') }} />\n                    </div>\n                ))}\n                {work.nodes.filter(job => !job.featured).length > 0 && (\n                    <div className=\"cv-other-roles\">\n                        <h3>Additional Roles</h3>\n                        {work.nodes.filter(job => !job.featured).map((job, idx) => (\n                            <div key={idx} className=\"cv-role-compact\">\n                                <span className=\"cv-role-title\">{job.title}</span>\n                                <span className=\"cv-role-period\">{renderPeriod(job.period)}</span>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </section>\n\n            <section className=\"cv-section cv-two-column\">\n                <div className=\"cv-column\">\n                    <h2>Skills</h2>\n                    <div className=\"cv-skills\">\n                        {cv.skillGroups.map((group, idx) => (\n                            <div key={idx} className=\"cv-skill-group\">\n                                <h4>{group.category}</h4>\n                                <p>{group.skills}</p>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"cv-column\">\n                    <h2>Certifications</h2>\n                    {certifications.nodes.map((cert, idx) => (\n                        <div key={idx} className=\"cv-item-compact\">\n                            <div className=\"cv-item-header\">\n                                <h4>{cert.title}</h4>\n                                <span className=\"cv-period-small\">{renderPeriod(cert.period)}</span>\n                            </div>\n                            <div className=\"cv-cert-body\">{cert.body}</div>\n                        </div>\n                    ))}\n\n                    <h2>Education</h2>\n                    {education.nodes.filter(edu => edu.featured).map((edu, idx) => (\n                        <div key={idx} className=\"cv-item-compact\">\n                            <div className=\"cv-item-header\">\n                                <h4>{edu.title}</h4>\n                                <span className=\"cv-period-small\">{renderPeriod(edu.period)}</span>\n                            </div>\n                            <div className=\"cv-edu-body\">{edu.body}</div>\n                        </div>\n                    ))}\n                </div>\n            </section>\n\n            <footer className=\"cv-footer\">\n                <p>Full portfolio available at <a href={metadata.website}>{new URL(metadata.website).hostname}</a></p>\n            </footer>\n        </div>\n    );\n}\n\nexport const Head = ({ data }) => (\n    <>\n        <meta charSet=\"utf-8\" />\n        <title>CV - {data.metadata.name}</title>\n        <meta name=\"description\" content={`CV of ${data.metadata.name}`} />\n        <meta name=\"robots\" content=\"noindex\" />\n    </>\n);\n\nexport const pageQuery = graphql`\n    query {\n        metadata: metadataJson {\n            name\n            phone\n            email\n            location\n            website\n            role\n            avatar {\n                childImageSharp {\n                    gatsbyImageData(width: 120, height: 120, placeholder: BLURRED)\n                }\n            }\n            accounts {\n                linkedin\n                github\n            }\n        }\n\n        cv: cvJson {\n            summary\n            achievements\n            skillGroups {\n                category\n                skills\n            }\n        }\n\n        work: allWorkJson(sort: { period: { from: DESC } }) {\n            nodes {\n                title\n                body\n                featured\n                period {\n                    from(formatString: \"MMM YYYY\")\n                    to(formatString: \"MMM YYYY\")\n                }\n            }\n        }\n\n        certifications: allCertificationJson(sort: { period: { at: DESC } }) {\n            nodes {\n                title\n                body\n                period {\n                    at(formatString: \"MMM YYYY\")\n                }\n            }\n        }\n\n        education: allEducationJson(sort: { period: { from: DESC } }) {\n            nodes {\n                title\n                body\n                featured\n                period {\n                    from(formatString: \"MMM YYYY\")\n                    to(formatString: \"MMM YYYY\")\n                }\n            }\n        }\n    }\n`;\n\n"],"names":["CV","_ref","data","metadata","work","certifications","education","cv","renderPeriod","period","at","to","from","avatar","getImage","React","className","onClick","handlePrint","window","print","GatsbyImage","image","alt","name","role","href","email","phone","location","accounts","linkedin","target","rel","github","summary","split","map","para","idx","key","achievements","achievement","nodes","filter","job","featured","title","dangerouslySetInnerHTML","__html","body","replace","length","skillGroups","group","category","skills","cert","edu","website","URL","hostname","Head","_ref2","charSet","content"],"sourceRoot":""}